diff --git a/testproxymodel.cpp b/testproxymodel.cpp
index 09f3143..d74e936 100755
--- a/testproxymodel.cpp
+++ b/testproxymodel.cpp
@@ -7,12 +7,36 @@ namespace QTestLibPlugin {
 namespace Internal {
 
 TestProxyModel::TestProxyModel(QObject *parent) :
-    QSortFilterProxyModel(parent)
+    QSortFilterProxyModel(parent), mUpdatePeriod(60000)
 {
+    mUpdateTimer = new QTimer(this);
+    mUpdateTimer->setSingleShot(true);
+
     mFilters.resize((int) QTestLibModel::LastMessageType);
 
     for (int i = 0; i < mFilters.size(); i++)
         mFilters[i] = true;
+
+    connect(this, SIGNAL(sourceModelChanged()),
+            this, SLOT(handleSourceModelChange()));
+    connect(mUpdateTimer, SIGNAL(timeout()),
+            this, SLOT(updateFilter()));
+}
+
+void TestProxyModel::handleSourceModelChange(void)
+{
+    disconnect(this, SLOT(requestFilterUpdate()));
+
+    QAbstractItemModel *model = sourceModel();
+    if (model == NULL)
+        return;
+
+    connect(model, SIGNAL(dataChanged(const QModelIndex&, const QModelIndex&)),
+            this, SLOT(requestFilterUpdate()));
+    connect(model, SIGNAL(rowsInserted(const QModelIndex&, int, int)),
+            this, SLOT(requestFilterUpdate()));
+    connect(model, SIGNAL(rowsMoved(const QModelIndex&, int, int, const QModelIndex&, int)),
+            this, SLOT(requestFilterUpdate()));
 }
 
 bool TestProxyModel::filterAcceptsRow(int sourceRow, const QModelIndex& sourceParent) const
@@ -29,6 +53,16 @@ bool TestProxyModel::filterAcceptsRow(int sourceRow, const QModelIndex& sourcePa
     return mFilters.at((int) messageType.value<QTestLibModel::MessageType>());
 }
 
+void TestProxyModel::requestFilterUpdate(void)
+{
+    if (mUpdatePeriod == 0)
+        updateFilter();
+
+    if (mUpdateTimer->isActive())
+        mUpdateTimer->stop();
+    mUpdateTimer->start(mUpdatePeriod);
+}
+
 TestProxyButton::TestProxyButton(QTestLibModel::MessageType messageType, TestProxyModel *proxy, QWidget *parent)
     :QToolButton(parent), mType(messageType), mProxy(proxy)
 {
diff --git a/testproxymodel.h b/testproxymodel.h
index e495fa8..10ce746 100755
--- a/testproxymodel.h
+++ b/testproxymodel.h
@@ -18,10 +18,19 @@ public:
     inline void disableMessageType(QTestLibModel::MessageType type) {mFilters[(int) type] = false; invalidateFilter();}
     inline void toogleMessageType(QTestLibModel::MessageType type) {mFilters[(int) type] = !mFilters.at((int) type); invalidateFilter();}
     inline bool isMessageTypeEnabled(QTestLibModel::MessageType type) const {return mFilters.at((int) type);}
+
+    inline void setDynamicFilteringPeriod(int ms) {mUpdatePeriod = ms;}
+    inline int dynamicFilteringPeriod(void) const {return mUpdatePeriod;}
 protected:
     bool filterAcceptsRow(int sourceRow, const QModelIndex& sourceParent) const;
+private slots:
+    void handleSourceModelChange(void);
+    void requestFilterUpdate(void);
+    inline void updateFilter(void) {invalidateFilter();}
 private:
     QVector<bool> mFilters;
+    QTimer *mUpdateTimer;
+    int mUpdatePeriod;
 };
 
 class TestProxyButton : public QToolButton
